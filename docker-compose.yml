services:
  db:
    container_name: db
    hostname: madrec-db
    image: mongo:latest
    env_file: db/.env
    ports:
      - "${DATABASE_PORT}:${DATABASE_CONTAINER_PORT}"
    volumes:
      - ./db/entrypoint/init-mongo.sh:/docker-entrypoint-initdb.d/init-mongo.sh
    command: mongod

  server:
    container_name: server
    hostname: madrec-server
    image: madrid-recicla-server:latest
    depends_on:
      - db
    env_file: server/.env
    ports:
      - "${SERVER_PORT}:${SERVER_CONTAINER_PORT}"
    deploy:
      restart_policy:
        condition: on-failure
    build:
      context: ./server
      dockerfile: Dockerfile
    volumes:
      - "./server/src/:/docker-entrypoint-initserver.d/"
  
  web:
    container_name: web
    hostname: madrec-web
    image: madrid-recicla-web:latest
    depends_on:
      - server
    ports:
      - "${WEB_PORT}:${WEB_CONTAINER_PORT}"
    environment:
      PORT: ${WEB_CONTAINER_PORT}
    build:
      context: ./web
      dockerfile: Dockerfile
      args:
        SERVER_URL: ${SERVER_URL}
        MAPBOX_TOKEN_PATH: ${MAPBOX_TOKEN_PATH}
        CLOTHES_CONTAINERS_PATH: ${CLOTHES_CONTAINERS_PATH}

  swagger-ui-external:
    image: swaggerapi/swagger-ui
    container_name: api-ext
    restart: always
    ports:
      - "${SWAGGER_PORT_EXT}:${SWAGGER_CONTAINER_PORT_EXT}"
    volumes:
      - ./server/docs/api/external.json:/swagger.json
    environment:
      SWAGGER_JSON: /swagger.json

  swagger-ui-internal:
    image: swaggerapi/swagger-ui
    container_name: api-int
    restart: always
    ports:
      - "${SWAGGER_PORT_INT}:${SWAGGER_CONTAINER_PORT_INT}"
    volumes:
      - ./server/docs/api/internal.json:/swagger.json
    environment:
      SWAGGER_JSON: /swagger.json
